ALGORITHM 1

for n = 0 to n / 2

  for i = 0 to rightmost disk 

    if disk_right is out of bounds 
      break

    else if disk_left (n) is white AND i <= 3

      i++
      do nothing

    else if disk_left (n) is black AND i > 3

      i++
      do nothing

    else 

      swap the disk_left with disk_right

  for i at rightmost disk to 0

    if disk_left (n) is out of bounds

      break

    else if disk_right (n) is black AND i > 3
    
      i--
      do nothing 

    else if disk_right (n) is white AND i <= 3

      i--
      do nothing

    else
      swap the disk_right with disk_left 

ALGORITHM 2 

for n to n + 1
   
  for i = 0 to rightmost_disk EVENS 
    
    if right_disk (2n) is out_of_bounds

      break

    else if left_disk (2n - 1) is black 

      switch right_disk with left_disk 

    else 

      i++ 
      do nothing 
  

  for i = 0 to rightmost_disk ODDS 

    if right_dusk (2n + 1) is out_of_bounds
      
      break
    
    else if left_disk (2n - 2) is black 

      switch right_disk with left_disk 

    else 

      i++
      do nothing 